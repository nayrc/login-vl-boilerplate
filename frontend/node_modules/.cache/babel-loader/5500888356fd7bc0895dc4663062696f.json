{"remainingRequest":"T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\node_modules\\babel-loader\\lib\\index.js!T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\src\\store\\module\\auth.js","dependencies":[{"path":"T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\src\\store\\module\\auth.js","mtime":1628512132998},{"path":"T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"T:\\Work\\Lingkar9\\Study\\Bootcamp\\Submission\\Task-31-agustus-2021\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["T:/Work/Lingkar9/Study/Bootcamp/Submission/Task-31-agustus-2021/frontend/src/store/module/auth.js"],"names":["getField","updateField","http","catchHttp","setToken","router","cookies","namespaced","state","authData","au_email","au_password","forgotPasswordData","checkCodeOtpData","au_2fa","resetPasswordData","userData","get","getters","mutations","CLEAR_AUTH_DATA","email","password","CLEAR_RESET_PASSWORD_DATA","SET_AUTH_DATA","SET_FORGOT_PASSWORD_DATA","data","SET_RESET_PASSWORD_DATA","CLEAR_FORGOT_PASSWORD_DATA","CLEAR_ALL","actions","login","commit","post","res","token","set","user","push","name","forgotPassword","console","log","checkCodeOtp","resetPassword"],"mappings":";;AAAA,SACEA,QADF,EAEEC,WAFF,QAGO,iBAHP;AAKA,SACEC,IADF,EAEEC,SAFF,EAGEC,QAHF,QAIO,mBAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAE,EADF;AAERC,MAAAA,WAAW,EAAE;AAFL,KADL;AAKLC,IAAAA,kBAAkB,EAAE;AAClBF,MAAAA,QAAQ,EAAE;AADQ,KALf;AAQLG,IAAAA,gBAAgB,EAAE;AAChBH,MAAAA,QAAQ,EAAE,EADM;AAEhBI,MAAAA,MAAM,EAAE;AAFQ,KARb;AAYLC,IAAAA,iBAAiB,EAAE;AACjBL,MAAAA,QAAQ,EAAE,EADO;AAEjBC,MAAAA,WAAW,EAAE;AAFI,KAZd;AAgBLK,IAAAA,QAAQ,EAAEV,OAAO,CAACW,GAAR,CAAY,WAAZ;AAhBL,GAFM;AAoBbC,EAAAA,OAAO,EAAE;AACPlB,IAAAA,QAAQ,EAARA;AADO,GApBI;AAuBbmB,EAAAA,SAAS,EAAE;AACTlB,IAAAA,WAAW,EAAXA,WADS;AAETmB,IAAAA,eAFS,2BAEOZ,KAFP,EAEc;AACrBA,MAAAA,KAAK,CAACC,QAAN,CAAeY,KAAf,GAAuB,EAAvB;AACAb,MAAAA,KAAK,CAACC,QAAN,CAAea,QAAf,GAA0B,EAA1B;AACD,KALQ;AAMTC,IAAAA,yBANS,qCAMiBf,KANjB,EAMwB;AAC/BA,MAAAA,KAAK,CAACC,QAAN,CAAeY,KAAf,GAAuB,EAAvB;AACAb,MAAAA,KAAK,CAACC,QAAN,CAAea,QAAf,GAA0B,EAA1B;AACD,KATQ;AAUTE,IAAAA,aAVS,yBAUKhB,KAVL,EAUY;AACnBA,MAAAA,KAAK,CAACQ,QAAN,GAAiBV,OAAO,CAACW,GAAR,CAAY,WAAZ,CAAjB;AACD,KAZQ;AAaTQ,IAAAA,wBAbS,oCAagBjB,KAbhB,EAauBkB,IAbvB,EAa6B;AACpClB,MAAAA,KAAK,CAACI,kBAAN,CAAyBF,QAAzB,GAAoCgB,IAApC;AACAlB,MAAAA,KAAK,CAACK,gBAAN,CAAuBH,QAAvB,GAAkCgB,IAAlC;AACD,KAhBQ;AAiBTC,IAAAA,uBAjBS,mCAiBenB,KAjBf,EAiBsBkB,IAjBtB,EAiB4B;AACnClB,MAAAA,KAAK,CAACO,iBAAN,CAAwBL,QAAxB,GAAmCgB,IAAnC;AACD,KAnBQ;AAoBTE,IAAAA,0BApBS,sCAoBkBpB,KApBlB,EAoByB;AAChCA,MAAAA,KAAK,CAACI,kBAAN,CAAyBF,QAAzB,GAAoC,EAApC;AACD,KAtBQ;AAuBTmB,IAAAA,SAvBS,qBAuBCrB,KAvBD,EAuBQ;AACfA,MAAAA,KAAK,CAACC,QAAN,CAAeC,QAAf,GAA0B,EAA1B;AACAF,MAAAA,KAAK,CAACC,QAAN,CAAeE,WAAf,GAA6B,EAA7B;AACAH,MAAAA,KAAK,CAACI,kBAAN,CAAyBF,QAAzB,GAAoC,EAApC;AACAF,MAAAA,KAAK,CAACK,gBAAN,CAAuBH,QAAvB,GAAkC,EAAlC;AACAF,MAAAA,KAAK,CAACK,gBAAN,CAAuBC,MAAvB,GAAgC,EAAhC;AACAN,MAAAA,KAAK,CAACO,iBAAN,CAAwBL,QAAxB,GAAmC,EAAnC;AACAF,MAAAA,KAAK,CAACO,iBAAN,CAAwBJ,WAAxB,GAAsC,EAAtC;AACD;AA/BQ,GAvBE;AAyDbmB,EAAAA,OAAO,EAAE;AACDC,IAAAA,KADC,uBAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFDvB,gBAAAA,KAEC,QAFDA,KAEC,EADDwB,MACC,QADDA,MACC;AAAA;;AAAA,sBAEKxB,KAAK,CAACC,QAAN,CAAeY,KAAf,KAAyB,EAAzB,IAA+Bb,KAAK,CAACC,QAAN,CAAea,QAAf,KAA4B,EAFhE;AAAA;AAAA;AAAA;;AAAA,iDAGU,GAHV;;AAAA;AAAA;AAAA,uBAKmBpB,IAAI,CAAC+B,IAAL,CAAU,YAAV,EAAwBzB,KAAK,CAACC,QAA9B,CALnB;;AAAA;AAKOyB,gBAAAA,GALP;AAMC9B,gBAAAA,QAAQ,CAAC8B,GAAG,CAACR,IAAJ,CAASA,IAAT,CAAcS,KAAf,CAAR;AAEA7B,gBAAAA,OAAO,CAAC8B,GAAR,CAAY,cAAZ,EAA4BF,GAAG,CAACR,IAAJ,CAASA,IAAT,CAAcS,KAA1C;AACA7B,gBAAAA,OAAO,CAAC8B,GAAR,CAAY,WAAZ,EAAyBF,GAAG,CAACR,IAAJ,CAASA,IAAT,CAAcW,IAAvC;AAEAL,gBAAAA,MAAM,CAAC,eAAD,CAAN;AAXD,iDAaQ3B,MAAM,CAACiC,IAAP,CAAY;AACjBC,kBAAAA,IAAI,EAAE;AADW,iBAAZ,CAbR;;AAAA;AAAA;AAAA;AAAA,iDAiBQpC,SAAS,aAjBjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBF,KAvBM;AAyBDqC,IAAAA,cAzBC,iCA4BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFDhC,gBAAAA,KAEC,SAFDA,KAEC,EADDwB,MACC,SADDA,MACC;AAAA;AAAA;AAAA,uBAEmB9B,IAAI,CAAC+B,IAAL,CAAU,qBAAV,EAAiCzB,KAAK,CAACI,kBAAvC,CAFnB;;AAAA;AAEOsB,gBAAAA,GAFP;AAICF,gBAAAA,MAAM,CAAC,4BAAD,CAAN;AAEAA,gBAAAA,MAAM,CAAC,0BAAD,EAA6BE,GAAG,CAACR,IAAJ,CAASA,IAAtC,CAAN;AAEAe,gBAAAA,OAAO,CAACC,GAAR,CAAYlC,KAAK,CAACK,gBAAN,CAAuBH,QAAnC;AARD,kDASQ,GATR;;AAAA;AAAA;AAAA;AAAA,kDAWQP,SAAS,cAXjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaF,KAzCM;AA2CDwC,IAAAA,YA3CC,+BA8CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFDnC,gBAAAA,KAEC,SAFDA,KAEC,EADDwB,MACC,SADDA,MACC;AAAA;AAAA;AAAA,uBAEmB9B,IAAI,CAAC+B,IAAL,CAAU,mBAAV,EAA+BzB,KAAK,CAACK,gBAArC,CAFnB;;AAAA;AAEOqB,gBAAAA,GAFP;AAICF,gBAAAA,MAAM,CAAC,yBAAD,EAA4BE,GAAG,CAACR,IAAJ,CAASA,IAArC,CAAN;AAJD,kDAMQ,GANR;;AAAA;AAAA;AAAA;AAAA,kDAQQvB,SAAS,cARjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUF,KAxDM;AA0DDyC,IAAAA,aA1DC,gCA6DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFDpC,gBAAAA,KAEC,SAFDA,KAEC,EADDwB,MACC,SADDA,MACC;AAAA;AAAA;AAAA,uBAEO9B,IAAI,CAAC+B,IAAL,CAAU,oBAAV,EAAgCzB,KAAK,CAACO,iBAAtC,CAFP;;AAAA;AAICiB,gBAAAA,MAAM,CAAC,WAAD,CAAN;AAJD,kDAMQ,GANR;;AAAA;AAAA;AAAA;AAAA,kDAQQ7B,SAAS,cARjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUF;AAvEM;AAzDI,CAAf","sourcesContent":["import {\r\n  getField,\r\n  updateField\r\n} from \"vuex-map-fields\";\r\n\r\nimport {\r\n  http,\r\n  catchHttp,\r\n  setToken\r\n} from \"../../config/http\";\r\nimport router from \"../../router\";\r\nimport cookies from \"vue-cookies\";\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    authData: {\r\n      au_email: \"\",\r\n      au_password: \"\"\r\n    },\r\n    forgotPasswordData: {\r\n      au_email: \"\",\r\n    },\r\n    checkCodeOtpData: {\r\n      au_email: \"\",\r\n      au_2fa: \"\"\r\n    },\r\n    resetPasswordData: {\r\n      au_email: \"\",\r\n      au_password: \"\"\r\n    },\r\n    userData: cookies.get(\"user_data\")\r\n  },\r\n  getters: {\r\n    getField\r\n  },\r\n  mutations: {\r\n    updateField,\r\n    CLEAR_AUTH_DATA(state) {\r\n      state.authData.email = \"\";\r\n      state.authData.password = \"\";\r\n    },\r\n    CLEAR_RESET_PASSWORD_DATA(state) {\r\n      state.authData.email = \"\";\r\n      state.authData.password = \"\";\r\n    },\r\n    SET_AUTH_DATA(state) {\r\n      state.userData = cookies.get(\"user_data\");\r\n    },\r\n    SET_FORGOT_PASSWORD_DATA(state, data) {\r\n      state.forgotPasswordData.au_email = data;\r\n      state.checkCodeOtpData.au_email = data;\r\n    },\r\n    SET_RESET_PASSWORD_DATA(state, data) {\r\n      state.resetPasswordData.au_email = data;\r\n    },\r\n    CLEAR_FORGOT_PASSWORD_DATA(state) {\r\n      state.forgotPasswordData.au_email = \"\";\r\n    },\r\n    CLEAR_ALL(state) {\r\n      state.authData.au_email = \"\";\r\n      state.authData.au_password = \"\";\r\n      state.forgotPasswordData.au_email = \"\";\r\n      state.checkCodeOtpData.au_email = \"\";\r\n      state.checkCodeOtpData.au_2fa = \"\";\r\n      state.resetPasswordData.au_email = \"\";\r\n      state.resetPasswordData.au_password = \"\";\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    async login({\r\n      state,\r\n      commit\r\n    }) {\r\n      try {\r\n        if (state.authData.email === \"\" || state.authData.password === \"\")\r\n          return 404;\r\n\r\n        const res = await http.post(\"auth/login\", state.authData);\r\n        setToken(res.data.data.token);\r\n\r\n        cookies.set(\"access_token\", res.data.data.token);\r\n        cookies.set(\"user_data\", res.data.data.user);\r\n\r\n        commit(\"SET_AUTH_DATA\");\r\n\r\n        return router.push({\r\n          name: \"Dashboard\"\r\n        });\r\n      } catch (err) {\r\n        return catchHttp(err);\r\n      }\r\n    },\r\n\r\n    async forgotPassword({\r\n      state,\r\n      commit\r\n    }) {\r\n      try {\r\n        const res = await http.post(\"auth/forgotPassword\", state.forgotPasswordData);\r\n\r\n        commit(\"CLEAR_FORGOT_PASSWORD_DATA\");\r\n\r\n        commit(\"SET_FORGOT_PASSWORD_DATA\", res.data.data)\r\n\r\n        console.log(state.checkCodeOtpData.au_email);\r\n        return 200;\r\n      } catch (err) {\r\n        return catchHttp(err);\r\n      }\r\n    },\r\n\r\n    async checkCodeOtp({\r\n      state,\r\n      commit\r\n    }) {\r\n      try {\r\n        const res = await http.post(\"auth/checkCodeOtp\", state.checkCodeOtpData);\r\n\r\n        commit(\"SET_RESET_PASSWORD_DATA\", res.data.data);\r\n\r\n        return 200;\r\n      } catch (err) {\r\n        return catchHttp(err);\r\n      }\r\n    },\r\n\r\n    async resetPassword({\r\n      state,\r\n      commit\r\n    }) {\r\n      try {\r\n        await http.post(\"auth/resetPassword\", state.resetPasswordData);\r\n\r\n        commit(\"CLEAR_ALL\");\r\n\r\n        return 200;\r\n      } catch (err) {\r\n        return catchHttp(err);\r\n      }\r\n    }\r\n  }\r\n}"]}]}